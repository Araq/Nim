#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Xie Yanbo <xieyanbo@gmail.com>
# Date: 2012-03-21
# Modified: 2019-09-15

# see also:
# Unicode Standard Annex #11
# East Asian Width
# http://unicode.org/reports/tr11/

import sys
from unicodedata import east_asian_width as eaw


def get_wild_char():
    for i in range(0x10FFFF + 1):
        try:
            c = chr(i)
        except ValueError:
            continue
        if eaw(c) in 'WF':
            # East Asian Fullwidth (F)
            # East Asian Wide (W)
            yield i


def get_ranges():
    prev = 0
    in_range = False
    range_start = 0
    for i in get_wild_char():
        if in_range:
            if prev + 1 == i:
                prev = i
                continue
            else:
                yield range_start, prev
                in_range = False
                range_start = i
        else:
            range_start = i
            in_range = True
        prev = i

    if in_range:
        yield range_start, i


def format_py():
    for b, e in get_ranges():
        range_size = e - b + 1
        print('%X %X %s' % (b, e, range_size))


#format_py()

wild_chars = list(get_ranges())


def print_source_code():
    map_lines = []
    line = ' ' * 8
    for b, e in wild_chars:
        item = '(%s, %s), ' % (b, e)
        new_line = line + item
        if len(new_line) < 76:
            line = new_line
        else:
            map_lines.append(line.rstrip())
            line = ' ' * 8 + item
    if line:
        map_lines.append(line.rstrip())

    print('# Generated by python {} and tools/generate_east_asian_wild_chars.py'.format(
        sys.version.split()[0]))
    print('# DO NOT EDIT BY HAND')
    print('wild_chars = [')
    for line in map_lines:
        print(line)
    print(' ' * 8 + ']')
    print('''
def is_wild_char(char):
    c = ord(char)
    for b, e in wild_chars:
        if c < b:
            break
        if b <= c <= e:
            return True
    return False
''')


print_source_code()
